/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/5.4/userguide/java_library_plugin.html
 */

import com.amazonaws.auth.profile.ProfileCredentialsProvider

buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath 'org.springframework.boot:spring-boot-gradle-plugin:2.2.5.RELEASE'
        classpath 'com.amazonaws:aws-java-sdk-core:1.11.737'
    }
}

plugins {
    // Apply the java-library plugin to add support for Java Library
    id 'java-library'
    id 'org.springframework.boot' version '2.2.5.RELEASE'
}

apply plugin: 'io.spring.dependency-management'

dependencyManagement {
    imports {
        mavenBom 'com.amazonaws:aws-java-sdk-bom:1.11.714'
        mavenBom 'com.amazonaws:aws-xray-recorder-sdk-bom:2.4.0'
    }
}

version =  '1.0'

jar {
    manifest {
    	attributes('Main-Class':             'com.azar.secondapp.SecondApplication',
                   'Implementation-Title':   'MonoSecondApp',
                   'Implementation-Version': version)
    }
}

ext {
    awsCredentials = new ProfileCredentialsProvider().credentials
}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    maven {
        url "s3://${repoBucketName}/flagstar-jars"
        credentials(AwsCredentials) {
            accessKey awsCredentials.AWSAccessKeyId
            secretKey awsCredentials.AWSSecretKey
        }
    }
    
    mavenLocal()
    jcenter()
}

task fatJar(type: Jar) {
	manifest {
        attributes 'Implementation-Title': 'Generate FAT jar for deployment',  
        	'Implementation-Version': version,
        	'Main-Class': 'com.azar.secondapp.SecondApplication'
    }
    
    baseName = project.name + '-all'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
    api 'org.apache.commons:commons-math3:3.6.1'

    // This dependency is used internally, and not exposed to consumers on their own compile classpath.
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-core'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-aws-sdk-instrumentor'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-apache-http'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-slf4j'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-metrics'
    implementation 'com.amazonaws:aws-xray-recorder-sdk-spring'
    implementation 'com.google.guava:guava:27.0.1-jre'
    implementation 'com.s3demorepo:MonoFirstApp:1.0'
    
    // Use JUnit test framework
    testImplementation 'junit:junit:4.12'
}

//mainClassName = 'com.azar.secondapp.SecondApplication'

